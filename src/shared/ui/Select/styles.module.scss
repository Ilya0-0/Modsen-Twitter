@use 'styles/_variables.scss' as *;
@use 'sass:map';

.selectContainer {
  width: 100%;
  position: relative;
  user-select: none;
  cursor: pointer;
  background: var(--background);
  border-radius: map.get($borderRadius, xs);
  border: map.get($borderWidth, thin) solid var(--gray);
  color: var(--textColor);
  padding: clamp(map.get($spacing, md), 2vw, map.get($spacing, lg));
  padding-right: map.get($spacing, 2xl);
  font-size: map.get($typography, md);
  transition: border-color 0.3s ease;

  &:focus {
    border-color: var(--textColor);
    outline: none;
  }

  &::after {
    content: '';
    position: absolute;
    right: map.get($spacing, md);
    top: 50%;
    transform: translateY(-50%);
    width: map.get($spacing, lg);
    height: map.get($spacing, sm);
    mask: url('/svg/chevron.svg') no-repeat;
    background-color: var(--gray);
  }
}

.placeholder {
  width: fit-content;
  font-size: map.get($typography, md);
}

.optionsList {
  max-height: map.get($sizes, maxHeightSelect);
  position: absolute;
  top: 100%;
  left: map.get($sizes, null);
  width: 100%;
  margin-top: map.get($spacing, xs);
  background: var(--background);
  border: map.get($borderWidth, thin) solid var(--gray);
  border-radius: map.get($borderRadius, xs);
  font-size: map.get($typography, md);
  z-index: map.get($z-indexes, dropdown);
  overflow: hidden;
  overflow-y: auto;
  opacity: 0;
  transform: translateY(calc(-1 * map.get($spacing, xs)));
  animation: slideDown 0.3s ease forwards;

  @keyframes slideDown {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

.option {
  padding: map.get($spacing, sm) map.get($spacing, lg);
  cursor: pointer;
  transition:
    background-color 0.3s ease,
    color 0.3s ease;
  color: var(--gray);

  &:hover {
    background-color: var(--primary);
    color: var(--white);
  }

  &Selected {
    background-color: var(--primary);
    color: var(--white);
  }

  &:first-child {
    border-top-left-radius: map.get($borderRadius, xs);
    border-top-right-radius: map.get($borderRadius, xs);
  }

  &:last-child {
    border-bottom: none;
    border-bottom-left-radius: map.get($borderRadius, xs);
    border-bottom-right-radius: map.get($borderRadius, xs);
  }
}
